{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72e2fe41.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n           Balance Tracker v1.0\r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React,{ createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n//Initial State\r\n\r\nconst initialState = {\r\n  transactions: []\r\n};\r\n\r\n//Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n\r\n//Provider Component\r\nexport const GlobalProvider = ({ children }) =>{\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    //Action\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    function addTransaction(transaction) {\r\n      dispatch({\r\n        type: \"ADD_TRANSACTION\",\r\n        payload: transaction,\r\n      });\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>₹{total}</h1>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">+₹{income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">-₹{expense}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\n\r\nexport const Transaction = ({transaction}) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n  return (\r\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n      {transaction.text}{\" \"}\r\n      <span>\r\n        {sign}₹{Math.abs(transaction.amount)}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { Transaction } from \"./Transaction\";\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n ","import React, {useState, useContext} from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const AddTransaction = () => {\r\nconst [text, setText] = useState('');\r\nconst [amount, setAmount] = useState(0);\r\nconst { addTransaction } = useContext(GlobalContext);\r\n\r\nconst onSubmit = e =>{\r\n  e.preventDefault();\r\n\r\n  const newTransaction ={\r\n    id: Math.floor(Math.random() * 100000000),\r\n    text,\r\n    amount: +amount\r\n  }\r\n  addTransaction(newTransaction);\r\n}\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            id=\"text\"\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { Header } from \"./components/Header\";\nimport { Balance } from \"./components/Balance\";\nimport { IncomeExpenses } from \"./components/IncomeExpenses\";\nimport { TransactionList } from \"./components/TransactionList\";\nimport { AddTransaction } from \"./components/AddTransaction\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"App\">\n        <Header />\n        <div className=\"container\">\n          <Balance />\n        </div>\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}